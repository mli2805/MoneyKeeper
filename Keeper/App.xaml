<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:Keeper="clr-namespace:Keeper" xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:Messaging="clr-namespace:System.Runtime.Remoting.Messaging;assembly=mscorlib" x:Class="Keeper.App"
             >
  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
          <Keeper:AppBootstrapper x:Key="bootstrapper" />
        </ResourceDictionary>
        <ResourceDictionary>
          <!-- ресурсы вставлять сюда-->
          <Style x:Key="TextBoxCellTextStyle2" TargetType="{x:Type TextBox}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
          </Style>

          <!--    пустой стиль для переопределения того, что делается по умолчанию, нужен для стиля кнопок -->
          <Style x:Key="ButtonFocusVisual" />

          <LinearGradientBrush x:Key="ButtonPressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
              <GradientStopCollection>
                <GradientStop Color="#BBB" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="0.1"/>
                <GradientStop Color="#EEE" Offset="0.9"/>
                <GradientStop Color="#FFF" Offset="1.0"/>
              </GradientStopCollection>
            </GradientBrush.GradientStops>
          </LinearGradientBrush>

          <LinearGradientBrush x:Key="ButtonPressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
              <GradientStopCollection>
                <GradientStop Color="#444" Offset="0.0"/>
                <GradientStop Color="#888" Offset="1.0"/>
              </GradientStopCollection>
            </GradientBrush.GradientStops>
          </LinearGradientBrush>

          <Style x:Key="MyButtonStyle" TargetType="{x:Type Button}" >
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <!--      еще кусок стиля применяемого если получен фокус ввода с клавиатуры, если не переопределить получает пунктирную рамку-->
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="Button">
                  <Border x:Name="BorderOfMyButton"  CornerRadius="2" BorderThickness="1" Background="White" BorderBrush="Black">
                    <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                  </Border>
                  <ControlTemplate.Triggers>
                    <!--              перешли на кнопку по табуляции-->
                    <Trigger Property="IsKeyboardFocused" Value="true">
                      <Setter TargetName="BorderOfMyButton" Property="Background" Value="#F2F2F2" />
                      <Setter Property="FontWeight" Value="Bold"/>
                    </Trigger>
                    <!--              стиль кнопки, у которой IsDefault = true, в момент появления формы, после любых телодвижений больше не применяется-->
                    <Trigger Property="IsDefaulted" Value="true">
                      <Setter TargetName="BorderOfMyButton" Property="Background" Value="#F2F2F2" />
                    </Trigger>
                    <!--              мышь над кнопкой-->
                    <Trigger Property="IsMouseOver" Value="true">
                      <Setter TargetName="BorderOfMyButton" Property="Background" Value="#F2F2F2" />
                      <Setter Property="FontWeight" Value="Bold"/>
                    </Trigger>
                    <!--              удерживается нажатой левая кнопка мыши-->
                    <Trigger Property="IsPressed" Value="true">
                      <Setter TargetName="BorderOfMyButton" Property="Background" Value="{StaticResource ButtonPressedBrush}" />
                      <Setter TargetName="BorderOfMyButton" Property="BorderBrush" Value="{StaticResource ButtonPressedBorderBrush}" />
                    </Trigger>
                    <!--              кнопка задизэйблена-->
                    <Trigger Property="IsEnabled" Value="false">
                      <Setter Property="Foreground" Value="#BBB"/>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </ResourceDictionary>
      </ResourceDictionary.MergedDictionaries>

      <Style x:Key="SeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Separator}">
              <Grid Margin="0,2,0,1" SnapsToDevicePixels="true" UseLayoutRounding="False">
                <Rectangle Fill="#E0E0E0" Height="1" Margin="30,0,1,1"/>
                <Rectangle Fill="White" Height="1" Margin="30,1,1,0"/>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      
      <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="MenuItem">
              <Border Height="20" BorderThickness="1" BorderBrush="{x:Null}" Background="White" >
               
              
                <StackPanel ClipToBounds="True"
                      Orientation="Horizontal"
                      IsItemsHost="True" />
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="{x:Type ToolTip}" TargetType="ToolTip">
        <Setter Property="Background" Value="#F4FBA7" />
      </Style>

      <System:String x:Key="iconplus">../Resources/plus16.ico</System:String>
    </ResourceDictionary>
  </Application.Resources>
</Application>
